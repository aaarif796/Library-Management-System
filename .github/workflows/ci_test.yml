name: Django CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
          MYSQL_USER: ci_user
          MYSQL_PASSWORD: ci_pass
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -p$${MYSQL_ROOT_PASSWORD}"
          --health-interval=10s --health-timeout=5s --health-retries=5

    env:
      # read by settings.py
      DATABASE_HOST: 127.0.0.1
      DATABASE_PORT: 3306
      DATABASE_NAME: test_db
      DATABASE_USER: ci_user
      DATABASE_PASSWORD: ci_pass
      DJANGO_SETTINGS_MODULE: lms_api.settings
      PYTHONUNBUFFERED: 1

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install system deps for mysqlclient
        run: |
          sudo apt-get update
          sudo apt-get install -y default-libmysqlclient-dev build-essential

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip wheel
          if [ -f requirements.txt ]; then pip install -r requirements.txt; else pip install django mysqlclient uvicorn pytest pytest-django pytest-cov coverage; fi

      - name: Wait for MySQL to be healthy
        run: |
          echo "Waiting for MySQL to be ready..."
          for i in {1..30}; do
            mysqladmin ping -h 127.0.0.1 -uroot -proot >/dev/null 2>&1 && break
            echo "waiting for mysql..."
            sleep 2
          done
          mysqladmin ping -h 127.0.0.1 -uroot -proot

      - name: Run migrations (working dir: django_api/lms_api)
        working-directory: django_api/lms_api
        run: |
          python ../manage.py migrate --noinput

      - name: Collect static (optional)
        working-directory: django_api/lms_api
        run: |
          python ../manage.py collectstatic --noinput || true

      - name: Start uvicorn in background (working dir: django_api/lms_api)
        working-directory: django_api/lms_api
        run: |
          # Start uvicorn from the project package (lms_api.asgi:application)
          nohup python -m uvicorn lms_api.asgi:application --host 0.0.0.0 --port 8000 > uvicorn.log 2>&1 &
          echo $! > uvicorn.pid
          # wait for server to be ready (tries for up to ~30 seconds)
          for i in {1..30}; do
            if curl -sSf http://127.0.0.1:8000/ >/dev/null; then
              echo "uvicorn started"
              break
            fi
            echo "waiting for uvicorn..."
            sleep 1
          done
          # print head of log for debugging
          tail -n +1 uvicorn.log | sed -n '1,200p'

      - name: Run tests with coverage (working dir: django_api/lms_api)
        working-directory: django_api/lms_api
        run: |
          coverage run -m pytest --maxfail=1 -q
          coverage report --fail-under=80

      - name: Upload coverage report (artifact)
        if: always()
